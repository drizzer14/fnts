"use strict";(self.webpackChunkfnts_docs=self.webpackChunkfnts_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"default":[{"type":"link","label":"Overview","href":"/fnts/","docId":"overview"},{"type":"link","label":"Installation and Usage","href":"/fnts/installation-and-usage","docId":"installation-and-usage"},{"type":"category","label":"Concepts","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Application","href":"/fnts/concepts/application","docId":"concepts/application"},{"type":"link","label":"Arguments Permutation","href":"/fnts/concepts/arguments-permutation","docId":"concepts/arguments-permutation"},{"type":"link","label":"Composition","href":"/fnts/concepts/composition","docId":"concepts/composition"},{"type":"link","label":"Currying","href":"/fnts/concepts/currying","docId":"concepts/currying"},{"type":"link","label":"Guarding","href":"/fnts/concepts/guarding","docId":"concepts/guarding"},{"type":"link","label":"Lens","href":"/fnts/concepts/lens","docId":"concepts/lens"},{"type":"link","label":"Monads","href":"/fnts/concepts/monads","docId":"concepts/monads"},{"type":"link","label":"Side Effects","href":"/fnts/concepts/side-effects","docId":"concepts/side-effects"}]},{"type":"link","label":"Migrating to v2","href":"/fnts/migrating-to-v2","docId":"migrating-to-v2"},{"type":"link","label":"Migrating to v3","href":"/fnts/migrating-to-v3","docId":"migrating-to-v3"},{"type":"category","label":"API","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/fnts/api/Overview","docId":"api/Overview"},{"type":"category","label":"interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Interface: Lens<Source\\\\>","href":"/fnts/api/interfaces/Lens.Lens","docId":"api/interfaces/Lens.Lens"}]},{"type":"category","label":"Modules","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Module: Application","href":"/fnts/api/modules/Application","docId":"api/modules/Application"},{"type":"link","label":"Module: Composition","href":"/fnts/api/modules/Composition","docId":"api/modules/Composition"},{"type":"link","label":"Module: Curry","href":"/fnts/api/modules/Curry","docId":"api/modules/Curry"},{"type":"link","label":"Module: Either","href":"/fnts/api/modules/Either","docId":"api/modules/Either"},{"type":"link","label":"Module: Either Operators","href":"/fnts/api/modules/Either_Operators","docId":"api/modules/Either_Operators"},{"type":"link","label":"Module: Guard","href":"/fnts/api/modules/Guard","docId":"api/modules/Guard"},{"type":"link","label":"Module: Identity","href":"/fnts/api/modules/Identity","docId":"api/modules/Identity"},{"type":"link","label":"Module: Lens","href":"/fnts/api/modules/Lens","docId":"api/modules/Lens"},{"type":"link","label":"Module: Maybe","href":"/fnts/api/modules/Maybe","docId":"api/modules/Maybe"},{"type":"link","label":"Module: Maybe Operators","href":"/fnts/api/modules/Maybe_Operators","docId":"api/modules/Maybe_Operators"},{"type":"link","label":"Module: Permutation","href":"/fnts/api/modules/Permutation","docId":"api/modules/Permutation"},{"type":"link","label":"Module: Set","href":"/fnts/api/modules/Set","docId":"api/modules/Set"},{"type":"link","label":"Module: Side Effects","href":"/fnts/api/modules/Side_Effects","docId":"api/modules/Side_Effects"},{"type":"link","label":"Module: Types","href":"/fnts/api/modules/Types","docId":"api/modules/Types"}]}]}]},"docs":{"api/interfaces/Lens.Lens":{"id":"api/interfaces/Lens.Lens","title":"Interface: Lens<Source\\\\>","description":"Lens.Lens","sidebar":"default"},"api/modules/Application":{"id":"api/modules/Application","title":"Module: Application","description":"Type Aliases","sidebar":"default"},"api/modules/Composition":{"id":"api/modules/Composition","title":"Module: Composition","description":"Type Aliases","sidebar":"default"},"api/modules/Curry":{"id":"api/modules/Curry","title":"Module: Curry","description":"Type Aliases","sidebar":"default"},"api/modules/Either":{"id":"api/modules/Either","title":"Module: Either","description":"Type Aliases","sidebar":"default"},"api/modules/Either_Operators":{"id":"api/modules/Either_Operators","title":"Module: Either Operators","description":"Type Aliases","sidebar":"default"},"api/modules/Guard":{"id":"api/modules/Guard","title":"Module: Guard","description":"Type Aliases","sidebar":"default"},"api/modules/Identity":{"id":"api/modules/Identity","title":"Module: Identity","description":"Type Aliases","sidebar":"default"},"api/modules/Lens":{"id":"api/modules/Lens","title":"Module: Lens","description":"Interfaces","sidebar":"default"},"api/modules/Maybe":{"id":"api/modules/Maybe","title":"Module: Maybe","description":"Type Aliases","sidebar":"default"},"api/modules/Maybe_Operators":{"id":"api/modules/Maybe_Operators","title":"Module: Maybe Operators","description":"Type Aliases","sidebar":"default"},"api/modules/Permutation":{"id":"api/modules/Permutation","title":"Module: Permutation","description":"Type Aliases","sidebar":"default"},"api/modules/Set":{"id":"api/modules/Set","title":"Module: Set","description":"Type Aliases","sidebar":"default"},"api/modules/Side_Effects":{"id":"api/modules/Side_Effects","title":"Module: Side Effects","description":"Functions","sidebar":"default"},"api/modules/Types":{"id":"api/modules/Types","title":"Module: Types","description":"Type Aliases","sidebar":"default"},"api/Overview":{"id":"api/Overview","title":"Overview","description":"Modules","sidebar":"default"},"concepts/application":{"id":"concepts/application","title":"Application","description":"apply function allows to call several functions on the same arguments provided to apply.","sidebar":"default"},"concepts/arguments-permutation":{"id":"concepts/arguments-permutation","title":"Arguments Permutation","description":"For non-commutative operations or functions that can be applied in the compositional context it is handy to be able to automatically permutate (switch places of) their arguments. For some functions in fnts this is already implemented:","sidebar":"default"},"concepts/composition":{"id":"concepts/composition","title":"Composition","description":"Composition in fnts is represented through the compose and pipe functions.","sidebar":"default"},"concepts/currying":{"id":"concepts/currying","title":"Currying","description":"The curry function is here to help with auto-currying of variadic functions","sidebar":"default"},"concepts/guarding":{"id":"concepts/guarding","title":"Guarding","description":"In computing there\'s a pattern called \\"guard\\". Specifically, Haskell has a dedicated syntax for that, which fnts also implemented in a more JavaScripty way:","sidebar":"default"},"concepts/lens":{"id":"concepts/lens","title":"Lens","description":"There\'s a pattern in functional programming called \\"lenses\\". fnts brings two necessary functions","sidebar":"default"},"concepts/monads":{"id":"concepts/monads","title":"Monads","description":"Out of the variety of monads fnts chooses two presumably most suitable ones: maybe and either. Each have their own constructors and operators (as opposed to classes and methods based approach seen commonly).","sidebar":"default"},"concepts/side-effects":{"id":"concepts/side-effects","title":"Side Effects","description":"For handling side effects there are a couple of functions, the underlying concept of which is to not interfere with the main execution flow:","sidebar":"default"},"installation-and-usage":{"id":"installation-and-usage","title":"Installation and Usage","description":"First, make to sure to have typescript@5 installed, as otherwise the","sidebar":"default"},"migrating-to-v2":{"id":"migrating-to-v2","title":"Migrating to v2","description":"After extensive use of fnts in real codebases, several problems and","sidebar":"default"},"migrating-to-v3":{"id":"migrating-to-v3","title":"Migrating to v3","description":"fnts 3.0.0 update is dedicated to bringing it up to date","sidebar":"default"},"overview":{"id":"overview","title":"Overview","description":"fnts is an abbreviation for something like a \\"functional TypeScript\\". You could see a similar concept in libraries like fp-ts or ramda, each endorsing their own implementation of the idea.","sidebar":"default"}}}')}}]);